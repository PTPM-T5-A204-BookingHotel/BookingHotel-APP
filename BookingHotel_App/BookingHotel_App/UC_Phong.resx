<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>